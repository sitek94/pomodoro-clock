{"version":3,"sources":["gong.wav","components/Container.js","components/Buttons.js","components/PhaseControl.js","components/Timer.js","util.js","containers/PomodoroClock.js","components/Header.js","components/Footer.js","App.js","index.js"],"names":["module","exports","useStyles","makeStyles","root","display","gridTemplateColumns","justifyItems","Container","children","classes","Paper","className","square","theme","gridColumn","width","padding","spacing","Buttons","phase","isRunning","onStartStop","onReset","useTheme","color","palette","success","main","primary","startStopIconProps","fontSize","style","transition","IconButton","id","aria-label","onClick","alignItems","label","textTransform","maxWidth","textAlign","PhaseControl","value","onArrowUp","onArrowDown","Typography","variant","letterSpacing","Timer","bgColor","Box","bgcolor","component","mmss","minutes","Math","floor","seconds","PomodoroClock","useState","breakLength","setBreakLength","sessionLength","setSessionLength","setIsRunning","timerValue","setTimerValue","timerPhase","setTimerPhase","audioElement","useRef","useEffect","intervalId","setInterval","current","play","clearInterval","pause","currentTime","src","gong","ref","icon","svg","transform","error","Header","matches500","useMediaQuery","Icon","Footer","createMuiTheme","type","minWidth","height","justifyContent","layout","gridRowGap","alignContent","App","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8672909f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gong.76f8bf51.wav\";","import React from 'react';\r\n\r\nimport { Paper, makeStyles } from '@material-ui/core';\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(2, 1fr)',\r\n    justifyItems: 'center',\r\n  },\r\n});\r\n\r\nexport default function Container({ children }) {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <Paper className={classes.root} square>\r\n      {children}\r\n    </Paper>\r\n  )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    gridColumn: '1 / span 2',\r\n    width: '50%',\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(2, 1fr)',\r\n    justifyItems: 'center',\r\n    padding: theme.spacing(2, 0),\r\n  },\r\n}));\r\n\r\nexport default function Buttons({ phase, isRunning, onStartStop, onReset }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const color =\r\n    phase === 'break' ? theme.palette.success.main : theme.palette.primary.main;\r\n\r\n  const startStopIconProps = {\r\n    fontSize: 'large',\r\n    style: { color, transition: 'color .5s' },\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        id=\"start_stop\"\r\n        aria-label=\"start the timer\"\r\n        onClick={onStartStop}\r\n      >\r\n        {/* Change icon accordingly to timer state */}\r\n        {isRunning ? (\r\n          <PauseIcon {...startStopIconProps} />\r\n        ) : (\r\n          <PlayArrowIcon {...startStopIconProps} />\r\n        )}\r\n      </IconButton>\r\n\r\n      <IconButton id=\"reset\" aria-label=\"stop the timer\" onClick={onReset}>\r\n        <LoopIcon fontSize=\"large\" style={{ color, transition: 'color .5s' }} />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\nButtons.propTypes = {\r\n  phase: PropTypes.string.isRequired,\r\n  isRunning: PropTypes.bool.isRequired,\r\n  onStartStop: PropTypes.func.isRequired,\r\n  onReset: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(3, 1fr)',\r\n    justifyItems: 'center',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(2, 0),\r\n  },\r\n  label: {\r\n    gridColumn: '1 / span 3',\r\n    textTransform: 'uppercase',\r\n    '@media (max-width: 400px)': {\r\n      maxWidth: 80,\r\n      textAlign: 'center',\r\n    }\r\n  },\r\n}));\r\n\r\nexport default function PhaseControl({\r\n  label,\r\n  value,\r\n  onArrowUp,\r\n  onArrowDown,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const handleArrowUpClick = () => {\r\n    onArrowUp();\r\n  };\r\n\r\n  const handleArrowDownClick = () => {\r\n    onArrowDown();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography className={classes.label} variant=\"h6\" id={`${label}-label`}>\r\n        {label} length\r\n      </Typography>\r\n\r\n      <IconButton\r\n        id={`${label}-decrement`}\r\n        aria-label={`decrease ${label} time`}\r\n        onClick={handleArrowDownClick}\r\n      >\r\n        <ArrowDownwardIcon fontSize=\"large\" />\r\n      </IconButton>\r\n\r\n      <Typography id={`${label}-length`} variant=\"h4\">\r\n        {value}\r\n      </Typography>\r\n\r\n      <IconButton\r\n        id={`${label}-increment`}\r\n        aria-label={`increase ${label} time`}\r\n        onClick={handleArrowUpClick}\r\n      >\r\n        <ArrowUpwardIcon fontSize=\"large\" />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\nPhaseControl.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n  onArrowDown: PropTypes.func.isRequired,\r\n  onArrowUp: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { makeStyles, Typography, Box } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    gridColumn: '1 / span 2',\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    padding: theme.spacing(3),\r\n    transition: 'background-color .5s',\r\n  },\r\n  label: {\r\n    letterSpacing: 4,\r\n  },\r\n}));\r\n\r\nexport default function Timer({ value, phase }) {\r\n  const classes = useStyles();\r\n\r\n  const bgColor = phase === 'break' ? 'success.main' : 'primary.main';\r\n  const label = phase === 'break' ? 'Break' : 'Session';\r\n\r\n  return (\r\n    <Box bgcolor={bgColor} className={classes.root}>\r\n      <Typography\r\n        id=\"timer-label\"\r\n        className={classes.label}\r\n        variant=\"h4\"\r\n        component=\"h3\"\r\n      >\r\n        {label}\r\n      </Typography>\r\n\r\n      <Typography id=\"time-left\" variant=\"h1\" component=\"h2\">\r\n        {value}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\nTimer.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  phase: PropTypes.string.isRequired,\r\n};\r\n","export const mmss = (value) => {\r\n  let minutes = Math.floor(value / 60);\r\n  minutes = minutes < 10 ? '0' + minutes : minutes;\r\n  \r\n  let seconds = Math.floor(value % 60);\r\n  seconds = seconds < 10 ? '0' + seconds : seconds;\r\n\r\n  return `${minutes}:${seconds}`;\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nimport Container from '../components/Container';\r\nimport Buttons from '../components/Buttons';\r\nimport PhaseControl from '../components/PhaseControl';\r\nimport Timer from '../components/Timer';\r\nimport { mmss } from '../util';\r\nimport gong from '../gong.wav';\r\n\r\nexport default function PomodoroClock() {\r\n  \r\n  // Break\r\n  const [breakLength, setBreakLength] = useState(5);\r\n  const incrementBreakLength = () => {\r\n    if (!isRunning && breakLength < 60) {\r\n      setBreakLength(breakLength + 1);\r\n    }\r\n  };\r\n  const decrementBreakLength = () => {\r\n    if (!isRunning && breakLength > 1) {\r\n      setBreakLength(breakLength - 1);\r\n    }\r\n  };\r\n\r\n  // Session\r\n  const [sessionLength, setSessionLength] = useState(25);\r\n  const incrementSessionLength = () => {\r\n    if (!isRunning && sessionLength < 60) {\r\n      setSessionLength(sessionLength + 1);\r\n      setTimerValue(sessionLength * 60 + 60);\r\n    }\r\n  };\r\n  const decrementSessionLength = () => {\r\n    if (!isRunning && sessionLength > 1) {\r\n      setSessionLength(sessionLength - 1);\r\n      setTimerValue(sessionLength * 60 - 60);\r\n    }\r\n  };\r\n\r\n  // Timer\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [timerValue, setTimerValue] = useState(1500);\r\n  const [timerPhase, setTimerPhase] = useState('session');\r\n\r\n  // Audio\r\n  const audioElement = useRef();\r\n\r\n  useEffect(() => {\r\n    const switchPhase = () => {\r\n      if (timerPhase === 'session') {\r\n        setTimerPhase('break');\r\n        setTimerValue(breakLength * 60);\r\n      } else {\r\n        setTimerPhase('session');\r\n        setTimerValue(sessionLength * 60);\r\n      }\r\n    };\r\n\r\n    // Interval\r\n    let intervalId;\r\n    if (isRunning && timerValue > 0) {\r\n      intervalId = setInterval(() => {\r\n        setTimerValue(timerValue - 1);\r\n      }, 1000);\r\n      // The timer has reached zero\r\n    } else if (isRunning && timerValue === 0) {\r\n      intervalId = setInterval(() => {\r\n        setTimerValue(timerValue - 1);\r\n      }, 1000);\r\n\r\n      // In addition to setting up the interval switch phase and play sound\r\n      audioElement.current.play();\r\n      switchPhase();\r\n    } else {\r\n      clearInterval(intervalId);\r\n    }\r\n\r\n    // Cleanup\r\n    return () => clearInterval(intervalId);\r\n  }, [isRunning, breakLength, sessionLength, timerValue, timerPhase]);\r\n\r\n  // Start\r\n  const startTimer = () => {\r\n    setIsRunning(true);\r\n  };\r\n\r\n  // Stop\r\n  const stopTimer = () => {\r\n    setIsRunning(false);\r\n  };\r\n\r\n  // Reset\r\n  const resetTimer = () => {\r\n    setIsRunning(false);\r\n    setTimerValue(1500);\r\n    setTimerPhase('session');\r\n    setBreakLength(5);\r\n    setSessionLength(25);\r\n    audioElement.current.pause();\r\n    audioElement.current.currentTime = 0;\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <PhaseControl\r\n        label=\"break\"\r\n        value={breakLength}\r\n        onArrowUp={incrementBreakLength}\r\n        onArrowDown={decrementBreakLength}\r\n      />\r\n      <PhaseControl\r\n        label=\"session\"\r\n        value={sessionLength}\r\n        onArrowUp={incrementSessionLength}\r\n        onArrowDown={decrementSessionLength}\r\n      />\r\n      <Timer value={mmss(timerValue)} phase={timerPhase} />\r\n      <Buttons\r\n        phase={timerPhase}\r\n        isRunning={isRunning}\r\n        onStartStop={isRunning ? stopTimer : startTimer}\r\n        onReset={resetTimer}\r\n      />\r\n      <audio id=\"beep\" src={gong} ref={audioElement} />\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport {\r\n  Paper,\r\n  makeStyles,\r\n  Typography,\r\n  Icon,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\nimport { GiTomato } from 'react-icons/gi';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    textAlign: 'center',\r\n    padding: theme.spacing(3),\r\n\r\n    '@media (max-width: 360px)': {\r\n      padding: 0,\r\n    }\r\n  },\r\n  icon: {\r\n    fontSize: 46,\r\n  },\r\n  svg: {\r\n    // Align the tomato with the text\r\n    transform: 'translateY(4px)',\r\n    color: theme.palette.error.main\r\n  },\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n  const matches500 = useMediaQuery('(max-width: 500px)');\r\n\r\n  return (\r\n    <Paper component=\"header\" className={classes.root} square>\r\n      <Typography variant=\"h2\" component=\"h1\">\r\n        Pomodoro\r\n        {/* Insert break line for screens below 500px  */}\r\n        {matches500 ? <br /> : \" \" }\r\n        Cl\r\n        <Icon className={classes.icon}>\r\n          <GiTomato className={classes.svg} />\r\n        </Icon>\r\n        ck\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { makeStyles, Typography, Paper } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    textAlign: 'center',\r\n  }\r\n}));\r\n\r\nexport default function Footer() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper component=\"footer\" className={classes.root} square>\r\n      <Typography color=\"textSecondary\">\r\n        Coded by Maciek Sitkowski in 2020.\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  CssBaseline,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\n\r\nimport PomodoroClock from './containers/PomodoroClock';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: '#f44336'\r\n    }\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    minWidth: '320px',\r\n    width: '100vw',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  layout: {\r\n    maxWidth: 500,\r\n    display: 'grid',\r\n    gridRowGap: theme.spacing(3),\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n\r\n    '@media (max-width: 500px)': {\r\n      display: 'block',\r\n      width: '100%',\r\n    }\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <div className={classes.root}>\r\n        <div className={classes.layout}>\r\n          <Header />\r\n          <PomodoroClock />\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}